/*
2579 - 계단 오르기

문제
계단 오르기 게임은 계단 아래 시작점부터 계단 꼭대기에 위치한 도착점까지 가는 게임이다.

계단 오르는 데는 다음과 같은 규칙이 있다.
계단은 한 번에 한 계단씩 또는 두 계단씩 오를 수 있다. 즉, 한 계단을 밟으면서 이어서 다음 계단이나, 다음 다음 계단으로 오를 수 있다.
연속된 세 개의 계단을 모두 밟아서는 안 된다. 단, 시작점은 계단에 포함되지 않는다.
마지막 도착 계단은 반드시 밟아야 한다.
따라서 첫 번째 계단을 밟고 이어 두 번째 계단이나, 세 번째 계단으로 오를 수 있다. 
하지만, 첫 번째 계단을 밟고 이어 네 번째 계단으로 올라가거나, 첫 번째, 두 번째, 세 번째 계단을 연속해서 모두 밟을 수는 없다.

각 계단에 쓰여 있는 점수가 주어질 때 이 게임에서 얻을 수 있는 총 점수의 최댓값을 구하는 프로그램을 작성하시오.

입력
입력의 첫째 줄에 계단의 개수가 주어진다.
둘째 줄부터 한 줄에 하나씩 제일 아래에 놓인 계단부터 순서대로 각 계단에 쓰여 있는 점수가 주어진다. 
계단의 개수는 300이하의 자연수이고, 계단에 쓰여 있는 점수는 10,000이하의 자연수이다.

출력
첫째 줄에 계단 오르기 게임에서 얻을 수 있는 총 점수의 최댓값을 출력한다.
*/

#include <iostream>
#include <string.h> //gcc memset

using namespace std;

int N = 0; //계단 갯수
int floors[301]; //계단마다 매겨진 점수
int dp[301][2]; //현재 계단에서 이전에 건너온 계단 수에 따른 최대 누적 합계를 저장 (이전에 1계단씩 왔는지 2단계씩 왔는지의 경우의 수를 생각)
int answer = 0;

int _max(int x, int y)
{
	return (x > y) ? x : y;
}

int main()
{
	ios::sync_with_stdio(false);

	cin >> N;

	memset(floors, 0, sizeof(int) * 301);
	memset(dp, -1, sizeof(int) * 301 * 2);

	int m = 0;
	for (m = 0; m < N; ++m)
		cin >> floors[m];

	int k = 0;

	//처음 1,2계단 dp 세팅
	dp[0][0] = floors[0];
	dp[1][0] = floors[0] + floors[1];
	dp[1][1] = floors[1];

	dp[2][0] = floors[2] + dp[1][1];
	dp[2][1] = floors[2] + dp[0][0];

	for (m = 3; m < N; ++m)
	{		
		//1계단씩 연속 3번 올라올 수 없다.
		//그래서 dp[m][0]에서는 이전 계단에서 2계단 올라온 경우만 더해줌
		dp[m][0] = floors[m] + dp[m - 1][1];
			
		//2계단씩 올라온 경우
		dp[m][1] = floors[m] + _max(dp[m - 2][0], dp[m - 2][1]);		
	}

	//마지막 계단에 누적된 점수 중 큰 값이 최대가 됨
	answer = _max(dp[N - 1][0], dp[N - 1][1]);
	
	cout << answer << '\n';
	return 0;
}